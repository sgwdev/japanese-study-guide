@page "/kanji"
@model Web.Pages.Kanjis.IndexModel
@using Core.Entities.KanjiAggregate
@using Core;
@{
}

<div class="container">
    <div class="row justify-content-between">
        <div class="col-md-4">
            <h3>Kanji</h3>
        </div>
        <div class="col-md-4 text-right">
            <a class="btn btn-primary" asp-page="Add">Add kanji</a>
        </div>
    </div>
</div>

<hr />
<div class="accordion" id="kanjiAccordion">
    @foreach (Kanji kanji in Model.KanjiList)
    {
        <div class="card">
            <div class="card-header" id="heading-@kanji.Id">
                <div class="container">
                    <div class="row">
                        <div class="col">
                            <h2 class="mb-0">
                                <button class="btn btn-link btn-block text-left collapsed" type="button" data-toggle="collapse" data-target="#wl-@kanji.Id" aria-expanded="false" aria-controls="wl-@kanji.Id">
                                    @kanji.Character
                                </button>
                            </h2>
                        </div>
                        <div class="col-md-1">
                            <a class="btn btn-primary" asp-page="Details" asp-route-id="@kanji.Id">Details</a>
                        </div>
                        <div class="col-md-1">
                            <a class="btn btn-primary" asp-page="Edit" asp-route-id="@kanji.Id">Edit</a>
                        </div>
                    </div>
                </div>
            </div>
            <div id="wl-@kanji.Id" class="collapse" aria-labelledby="heading-@kanji.Id" data-parent="#kanjiAccordion">
                <ul class="list-group list-group-flush">
                    @foreach (Reading reading in kanji.Readings.OrderBy(k => k.TypeId))
                    {
                        <li class="list-group-item">
                            <span class="ml-4">
                                [@reading.Type.Label]
                                @(reading.Type.Id == Core.Constants.ReadingTypes.On ? Tools.ToKatakana(reading.Label) : reading.Label)
                                
                                @if (reading.Type.Id == Core.Constants.ReadingTypes.Special)
                                {
                                    <text>(@String.Join(", ", reading.Words.Select(wr => wr.Word.Label).ToList()))</text>
                                }
                            </span>
                        </li>
                    }
                </ul>
            </div>
        </div>
    }
</div>
